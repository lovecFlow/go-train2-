package main

import "fmt"

//Срез это часть массива. Как и массивы, срезы индексируются и имеют длину. В отличии от массивов их длинну можно заменить.
func makeSlice() {
	x := make([]float64, 5) //Отличие -- отсутсвие указания длины в квадратных скобках. В нашем случае x будет иметь длину 0. Создаётся slice встроенной функцией make.
	//Этот код даст slice, связанный с массивом типа float64, длинной 5. slice не может стать больше чем массив, но может стать меньше.
	y := make([]float64, 5, 10) //Функция make принимает и третий параметр (10), который является длинной массива, на который указавается slice

	//Ещё одна возможность создать slice -- выражение [low : high]
	arr := [5]float64{1, 2, 3, 4, 5}
	c := arr[0:5]

	fmt.Println(x, y, c)
	//low это позиция где будет начинаться slice, а high это позиция, где он закончится. Напрмер
}

//Функции slice

//Append:

func main1() {
	slice1 := []int{1, 2, 3}       //Создали массив  со значениями 1 2 3
	slice2 := append(slice1, 4, 5) //Добавили к нему ещё один slice со значениями 4 5
	fmt.Println(slice1, slice2)    //Результат: [1 2 3] [1 2 3 4 5]
}

//Copy

func main2() {
	slice3 := []int{1, 2, 3} //Создаём массив со з
	slice4 := make([]int, 2)
	copy(slice4, slice3)
	fmt.Println(slice3, slice4) //Содержимое slice3 копируется в содержимое slice4, но будут скпопированы только 2 первых элемента, тк место есть только для них.
}
